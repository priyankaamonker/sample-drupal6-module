<?php
// $Id: mediaclip, v 6.x-8.x-dev 02/05/2012

/*******************************************************************************
* Hook Functions (Drupal)
******************************************************************************/

/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned from arg() function
* @return help text for the path
*/
function mediaclip_help($path, $arg) {
    switch ($path) {
        case "admin/help/mediaclip":
        $output = '<p>'.  t("Mediaclip ia a product designing tool.") .'</p>';
            break;
    }
    return $output;
} // function mediaclip_help

/**
* Valid permissions for this module
* @return array An array of valid permissions for the mediaclip module
*/
function mediaclip_perm() {
    return array('administer mediaclip', 'access mediaclip content');
} // function mediaclip_perm()

/**
* Menu for this module
* @return array An array with this module's settings.
*/
function mediaclip_menu() {
    $items = array();
	
        //Link to the mediaclip admin page:
        $items['admin/settings/mediaclip'] = array(
       		'title' => 'Mediaclip',
       		'description' => 'Allows to use Mediaclip Designer.',
        	'page callback' => 'mediaclip_message',
    	        'access arguments' => array('administer mediaclip'),
     		'type' => MENU_NORMAL_ITEM,
    		'file' => 'mediaclip.admin.inc',
        );
	
	$items['admin/settings/mediaclip/templates'] = array(
		'title' => 'Templates',
		'description' => 'List of products with templates.',
		'access arguments' => array('administer mediaclip'),
		'page callback' => 'mediaclip_templates',
		'weight' => -5,
		'type' => MENU_LOCAL_TASK,
	);
	
	$items['admin/settings/mediaclip/templates/themes'] = array(
	        'title' => 'Themes',
 		'description' => 'List of products with themes.',
		'access arguments' => array('administer mediaclip'),
		'page callback' => 'mediaclip_templates',
		'weight' => -3,
		'type' => MENU_LOCAL_TASK,
	);
	
	$items['admin/settings/mediaclip/templates/inventory'] = array(
	        'title' => 'Inventory Channels',
 		'description' => 'List of inventory.',
		'access arguments' => array('administer mediaclip'),
		'page callback' => 'mediaclip_inventory',
		'weight' => -2,
		'type' => MENU_LOCAL_TASK,
	);

	$items['admin/settings/mediaclip/templates/themedetails/%'] = array(
		'title' => 'Theme Accessed by',
		'description' => 'List of users that accessed the theme.',
		'access arguments' => array('access content'),
		'page callback' => 'mediaclip_themedetails',
    		'page arguments' => array(5),
		'weight' => -1,
		'type' => MENU_CALLBACK,
	);

	$items['admin/settings/mediaclip/templates/add/new'] = array(
		'title' => 'Add Product Templates',
		'description' => '',
		'access arguments' => array('administer content'),
        	'page callback' => 'drupal_get_form',
   		'page arguments' => array('mc_templates_form', 5),
		'type' => MENU_CALLBACK,
	);
	
	$items['admin/settings/mediaclip/templates/edit/%'] = array(
		'title' => 'Edit Product Templates',
		'description' => '',
		'access arguments' => array('administer content'),
       		'page callback' => 'drupal_get_form',
   		'page arguments' => array('mc_templates_form', 5),
		'type' => MENU_CALLBACK,
	);
		
	$items['admin/settings/mediaclip/templates/delete/%'] = array(
		'title' => 'Delete Product Templates',
		'description' => '',
		'access arguments' => array('administer content'),
        	'page callback' => 'drupal_get_form',
   		'page arguments' => array('mc_templates_delete_confirm', 5),
		'type' => MENU_CALLBACK,
	);
	
	$items['admin/settings/mediaclip/defaults'] = array(
		'title' => 'Mediaclip Settings',
		'description' => 'Set Default Values',
		'access arguments' => array('administer mediaclip'),
		'page callback' => 'mediaclip_message',
		'weight' => -10,
		'type' => MENU_DEFAULT_LOCAL_TASK,
    	'file' => 'mediaclip.admin.inc',
	);	
	
	return $items;
}

function mediaclip_init() {
	global $base_url;
	if(!function_exists('timestamp_to_iso8601'))
	require_once(drupal_get_path('module', 'mediaclip') .'/lib/nusoap.php');
	drupal_add_css(drupal_get_path('module', 'mediaclip') .'/mediaclip.css');
	drupal_add_js(drupal_get_path('module', 'mediaclip') .'/js/mediaclip.js');
	drupal_set_html_head('<script language="JavaScript1.1">var baseDir ="'.$base_url.'/'.drupal_get_path('module', 'mediaclip').'";</script>');
}

function mediaclip_user($type, &$edit, &$user, $category = NULL) {
	switch ($type) {
		case 'login':
			if($user->uid!=0) {
				$result = userValidate();
			}
		break;
		case 'logout':
			if($user->uid!=0) {		    
				$guid = getUserGuid($user->uid);
			}
		break;
	}
}

function mediaclip_token_values($type, $object = NULL) {
	$tokens = array();
	switch ($type) {
		case 'cart':
		$users = $object;
		$tokens['cart-id'] = $users->uid;
		$tokens['cartusername'] = $users->name;
		break;
	}
	return $tokens;
}

function mediaclip_token_list($type = 'all') {
	$tokens = array();
	if ($type == 'cart' || $type == 'ubercart' || $type == 'all') {
		$tokens['cart']['cart-id'] = t('The user ID to whom the cart item belongs to.');
		$tokens['cart']['cartusername'] = t('The username to whom the cart item belongs to.');
	}
	return $tokens;
}

function mediaclip_cron() {
	$TODAY = mktime(0, 0, 0, date('n'), date('j'), date('Y'), 0);
	$CRONLAST_RUN = variable_get('mediaclip_daily_cron', 0);
	if ($CRONLAST_RUN != $TODAY) {
		variable_set('mediaclip_daily_cron', $TODAY);
		mc_send_reminders_clear_cart();	 //cron 1 : send reminders to customers about cart expiry, if date exceeded, clear cart.
	}
	mediaclip_allconfirm();	 		 //cron 2 : confirm pending orders with soft2Print.
}

function mediaclip_mail($key, &$message, $params) {
	global $base_url;
	global $user;
	$sitename    = variable_get('site_name', $base_url);
		
    switch ($key) {
    case 'reminder':
      $contact = $params['contact'];
      $message['subject'] .= t('Did you forget to finish your order?');
      $message['body'][] = token_replace(variable_get('mc_reminderContent', ''), 'cart', $params['cart']);
      break;
	  
    case 'orderconfirm':
      $contact = $params['contact'];
	  $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed';
      $message['subject'] .= t('Alert - ' .$sitename. ' - Problem confirming order with Soft2Print');
	  $msg = 'Dear Admin,<br /><br />Order '.$params['orderid']. ' at '.$base_url.' could not be confirmed with Soft2Print. There seems to be some problem. Please check for the order immediately. <br /><br />Team<br />'.$base_url;
      $message['body'][] = $msg;
      break;
	}
}

function mc_templates_form($form_state, $tid) {
	global $base_url;
 	$dir_path = file_directory_path() .'/mediaclip_templates/themes';
	if($tid!='new') {
		$res = db_fetch_object(db_query("SELECT product_id, template_id, template_name, template_image, display_name, occasion, category, status FROM {mediaclip_templates} WHERE id = %d", $tid));
		$form['id'] = array(
			'#type' => 'hidden',
			'#title' => '',
			'#default_value' => $tid,
		);
	}
	$form['#attributes'] = array('enctype' => "multipart/form-data");
	
	$form['product_id'] = array(
		'#type' => 'textfield',
		'#title' => t('Enter Product ID'),
		'#default_value' => $res->product_id ? $res->product_id : '',
		'#required' => TRUE,
	);
	
	$form['template_id'] = array(
		'#type' => 'textfield',
		'#title' => t('Enter Template ID'),
		'#default_value' => $res->template_id ? $res->template_id : '',
		'#required' => TRUE,
	);
	
	$form['template_name'] = array(
		'#type' => 'textfield',
		'#title' => t('Enter Template Name'),
		'#default_value' => $res->template_name ? $res->template_name : '',
		'#required' => FALSE,
	);
	
	$form['display_name'] = array(
		'#type' => 'textfield',
		'#title' => t('Enter Template Display Name'),
		'#default_value' => $res->display_name ? $res->display_name : '',
		'#required' => FALSE,
	);

	$form['template_image'] = array(
		'#type' => 'file',
		'#title' => t('Upload Template Image'),
		'#description' => t('Max. image size 20KB').'<img src="'.$base_url.'/'.$dir_path.'/'.$res->template_image.'" />',
		'#default_value' => $res->template_image ? $res->template_image : '',
		'#required' => FALSE,
	);
	
	$form['occasion'] = array(
		'#type' => 'textfield',
		'#title' => t('Enter Occasion Name'),
		'#default_value' => $res->occasion ? $res->occasion : '',
		'#required' => FALSE,
	);
	
	$form['category'] = array(
		'#type' => 'textfield',
		'#title' => t('Enter Category Name'),
		'#default_value' => $res->category ? $res->category : '',
		'#required' => FALSE,
	);
		
	$options = array(
		'1' => t('Enable'),
		'0' => t('Disable'),
	);

	$form['status'] = array(
		'#type' => 'radios',
		'#title' => t('Status'),
		'#options' => $options,
		'#default_value' => $res->status ? $res->status : 0,
	);

	//Submit button:
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
		'#suffix' => l(t('Cancel'), 'admin/settings/mediaclip/templates/'),
    );

    return $form;
}

function mc_templates_form_validate($form, &$form_state) {
    $has_errors = FALSE;

	if(!is_numeric($form_state['values']['product_id'])) {
		form_set_error('product_id', t('Please enter a valid product code.'));
		$has_errors = TRUE;
	}
	
	if(isset($_FILES['files']['name']['template_image'])){
	$size = $_FILES['files']['size']['template_image'];
	$dimensions = getimagesize( $_FILES['files']['tmp_name']['template_image']);
	if($size > 30000){
		form_set_error('template_image', t('Max. upload size 20KB'));
		$has_errors = TRUE;
	}
	if($dimensions[0] > 300){
		form_set_error('template_image', t('Max. width is 270px.'));
		$has_errors = TRUE;
	}
	if($dimensions[1] > 200){
		form_set_error('template_image', t('Max. height is 198px.'));
		$has_errors = TRUE;
	}
	}
	
    //Form requires rebuilding form so codes and expiration blocks will display correctly
	if ($has_errors) {
		$form_state["rebuild"] = FALSE;
	}
}

function mc_templates_form_submit($form, &$form_state) {
	if($form_state['values']['id'] == "") {
		db_query("INSERT INTO {mediaclip_templates} (product_id, template_id, template_name, display_name, occasion, category, status) VALUES (%d, '%s', '%s', '%s', '%s', '%s', %d)", $form_state['values']['product_id'], $form_state['values']['template_id'],  $form_state['values']['template_name'], $form_state['values']['display_name'], $form_state['values']['occasion'], $form_state['values']['category'], $form_state['values']['status']);
		$last_insert_id = db_last_insert_id('mediaclip_templates', 'product_id');
		$msg = 'Product template added';
	} else {
		//delete old image
		$old_image = db_result(db_query("SELECT template_image FROM {mediaclip_templates} WHERE id = %d", $form_state['values']['id']));
		if(isset($old_image) && $old_image!="" && $_FILES['files']['name']['template_image']!="") {
			unlink(file_directory_path().'/mediaclip_templates/themes/'.$old_image);
		}
		db_query("UPDATE {mediaclip_templates} SET product_id = %d, template_id = '%s', template_name = '%s', display_name = '%s', occasion = '%s', category = '%s', status = %d WHERE id = %d", $form_state['values']['product_id'], $form_state['values']['template_id'], $form_state['values']['template_name'], $form_state['values']['display_name'], $form_state['values']['occasion'], $form_state['values']['category'], $form_state['values']['status'], $form_state['values']['id']);
		$last_insert_id = $form_state['values']['id'];
		$msg = 'Product template updated';
	}
	
	if(isset($_FILES['files']['name']['template_image']) && $_FILES['files']['name']['template_image']!=""){
		$file = file_save_upload('template_image', array(), file_directory_path().'/mediaclip_templates/themes');
		$newfilename = db_result(db_query("SELECT filepath FROM {files} WHERE fid = %d", $file->fid));
		$newfilename1 = explode('/', $newfilename);
		$update = db_query("UPDATE {mediaclip_templates} SET template_image = '%s' WHERE id = %d", $newfilename1[5], $last_insert_id);
	}	
	
    watchdog('mediaclip', $msg, '', WATCHDOG_INFO);
    drupal_set_message($msg);
    $form_state['redirect'] = 'admin/settings/mediaclip/templates';
}

function mc_templates_delete_confirm($form_state, $tid) {
	$edit = db_fetch_object(db_query('SELECT product_id, template_id FROM {mediaclip_templates} WHERE id = %d', $tid));
	
	$form = array();
	$form['id'] = array('#type' => 'hidden', '#value' => $tid);
	$output = confirm_form($form,
	t('Are you sure you want to delete this template?'), 'admin/settings/mediaclip/templates',
	t('<br />This action cannot be undone.<br /><br />'),
	t('Delete'),
	t('Cancel'));
	return $output;
}

function mc_templates_delete_confirm_submit($form, &$form_state) {
	//delete image
	$old_image = db_result(db_query("SELECT template_image FROM {mediaclip_templates} WHERE id = %d", $form_state['values']['id']));
	if(isset($old_image) && $old_image!="") {
		unlink(file_directory_path().'/mediaclip_templates/themes/'.$old_image);
	}

	db_query('DELETE FROM {mediaclip_templates} WHERE id = %d', $form_state['values']['id']);
	watchdog('mediaclip', 'Product template deleted.', array(), WATCHDOG_NOTICE);
    drupal_set_message('Product template deleted.');
    $form_state['redirect'] = 'admin/settings/mediaclip/templates';
}